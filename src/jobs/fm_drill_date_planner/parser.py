import argparse
from functools import partial

from jobs.utils.validators import is_writable, valid_json_file


def build_argument_parser():
    parser = argparse.ArgumentParser(
        description="Calculate and write drill times from scaled controls."
    )
    parser.add_argument(
        "-i",
        "--input",
        required=True,
        type=partial(valid_json_file, parser=parser),
        help="Wells file generated by Everest (wells.json).",
    )
    parser.add_argument(
        "-opt",
        "--optimizer",
        required=True,
        type=partial(valid_json_file, parser=parser),
        help="File containing information related to wells. The format is "
        "consistent with the wells.json file when running everest and can "
        "be used directly.",
    )
    parser.add_argument(
        "-b",
        "--bounds",
        required=True,
        type=float,
        metavar=["UPPER", "LOWER"],
        help="Upper and lower bounds of the controls.",
        nargs=2,
    )
    parser.add_argument(
        "-m",
        "--max-days",
        required=True,
        type=int,
        help="Maximum time interval in days.",
    )
    parser.add_argument(
        "-o",
        "--output",
        required=True,
        type=partial(is_writable, parser=parser),
        help="Output file: input for drill planner job.",
    )
    return parser


args_parser = build_argument_parser()
