name: Test ResInsight

on:
  push:
    branches:
      - main
    tags: "*"
  pull_request:

env:
  ERT_SHOW_BACKTRACE: 1
  RESINSIGHT_VERSION: "2024.03.2"
  INSTALL_DIR: resinsight

jobs:
  build_dependencies:
    name: "build-deps_${{ matrix.os }}_py-${{ matrix.python-version }}"
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        os: [ubuntu-22.04]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: "actions/setup-python@v4"
        with:
          python-version: "${{ matrix.python-version }}"
      - uses: "actions/cache@v3"
        id: cache-package
        with:
          key: ${{ matrix.os }}_python-${{ matrix.python-version }}_resinsight_${{ env.RESINSIGHT_VERSION }}
          path: ${{ github.workspace }}/resinsight_${{ env.RESINSIGHT_VERSION }}.tar.gz
      - name: Install dependencies
        if: steps.cache-package.outputs.cache-hit != 'true'
        run: |
          sudo apt update
          sudo apt -y install build-essential gcc-12 g++-12 curl zip unzip tar
          sudo apt -y install qtbase5-dev qtbase5-private-dev libqt5charts5-dev libqt5svg5-dev
      - name: Switch cpp compiler
        if: steps.cache-package.outputs.cache-hit != 'true'
        run: |
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 12
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 12
          sudo update-alternatives --auto g++
          sudo update-alternatives --auto gcc
      - name: Clone ResInsight
        if: steps.cache-package.outputs.cache-hit != 'true'
        run: |
          git clone -b v${{ env.RESINSIGHT_VERSION }} https://github.com/OPM/ResInsight.git
      - name: Build ResInsight dependencies
        if: steps.cache-package.outputs.cache-hit != 'true'
        run: |
          cd ResInsight
          git submodule update --init
          ThirdParty/vcpkg/bootstrap-vcpkg.sh
          ThirdParty/vcpkg/vcpkg install grpc boost-filesystem boost-spirit eigen3
      - name: Build ResInsight
        if: steps.cache-package.outputs.cache-hit != 'true'
        run: |
          mkdir -p ResInsight/GrpcInterface/Python/rips/generated
          mkdir ${{ github.workspace }}/ResInsight/build
          cd ${{ github.workspace }}/ResInsight/build
          cmake .. \
              -DRESINSIGHT_ENABLE_GRPC=true \
              -DVCPKG_TARGET_TRIPLET=x64-linux \
              -DCMAKE_TOOLCHAIN_FILE=../ThirdParty/vcpkg/scripts/buildsystems/vcpkg.cmake \
              -DBUILD_PYTHON=OFF \
              -DRESINSIGHT_GRPC_DOWNLOAD_PYTHON_MODULE=OFF \
              -DRESINSIGHT_GRPC_BUNDLE_PYTHON_MODULE=OFF \
              -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/${{ env.INSTALL_DIR }} \
              -DRESINSIGHT_ENABLE_HDF5=OFF
          make -j$( nproc ) install
      - name: Package ResInsight
        if: steps.cache-package.outputs.cache-hit != 'true'
        run: |
          tar zcf ${{ github.workspace }}/resinsight_${{ env.RESINSIGHT_VERSION }}.tar.gz ${{ github.workspace }}/${{ env.INSTALL_DIR }}
      - name: Archive ResInsight
        if: steps.cache-package.outputs.cache-hit != 'true'
        uses: actions/upload-artifact@v3
        with:
          name: resinsight_${{ env.RESINSIGHT_VERSION }}
          path: ${{ github.workspace }}/resinsight_${{ env.RESINSIGHT_VERSION }}.tar.gz
          retention-days: 30

  tests:
    needs: build_dependencies
    if: ${{ always() && needs.build_dependencies.result != 'failed' }}
    name: "tests_${{ matrix.os }}_py-${{ matrix.python-version }}_${{ matrix.test_type }}"
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        os: [ubuntu-22.04]
        test_type: ["resinsight"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/cache/restore@v3
        id: restore-cached-package
        with:
          key: ${{ matrix.os }}_python-${{ matrix.python-version }}_resinsight_${{ env.RESINSIGHT_VERSION }}
          path: ${{ github.workspace }}/resinsight_${{ env.RESINSIGHT_VERSION }}.tar.gz

      - name: Unpack ResInsight
        run: |
          cd $HOME
          pwd
          tar zvxf ${{ github.workspace }}/resinsight_${{ env.RESINSIGHT_VERSION }}.tar.gz
          echo "${HOME}/${INSTALL_DIR}" >> $GITHUB_PATH
          echo $PATH

      # - uses: "actions/checkout@v2"
      #   with:
      #     fetch-depth: 0

      # - name: "Install dependencies"
      #   run: |
      #     pip install --upgrade pip setuptools

      # - name: "Install package"
      #   run: |
      #     pip install .[test]

      # - name: "Run tests using resinsight"
      #   run: |
      #     echo $PATH
      #     pytest -m "${{ matrix.test_type }}" -sv --hypothesis-profile ci

      - name: "Test package spinningjenny"
        run: |
          echo $PATH
          ls $HOME/resinsight
          ResInsight --console
